{% extends 'Base.html.jinja' %}
{% block headercontent %}
  <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs4/dt-1.11.5/fh-3.2.2/datatables.min.css"/>
  <script type="text/javascript" src="https://cdn.datatables.net/v/bs4/dt-1.11.5/fh-3.2.2/datatables.min.js"></script>
  <link href="{{ url_for('static', filename='css/datatables_style_override.css') }}" rel="stylesheet" type="text/css">
{% endblock %}

{% block content %}
  {% if ticket %}
    <h2 style="text-align: center; margin-top: 10px;">Relvals for ticket <b><a href="/tickets?prepid={{ ticket }}">{{ ticket }}</a></b></h2>
  {% elif prepid %}
    <h2 style="text-align: center; margin-top: 10px;"><strong>Relval</strong></h2>
  {% else %}
    <h2 style="text-align: center; margin-top: 10px;"><strong>Relvals</strong></h2>
  {% endif %}

  <div style="padding: 2px;">
    {{ table.__html__() }}
  </div>

  <footer class="footer fixed-bottom badge-light" style="padding: 0 12px; display: inline-flex; justify-content: space-between; box-shadow: -1px 0px 7px 1px gray;">
    <div id="id_footer_actions1" class="actions" style="display: flex; align-items: center;">
      <a id="multiple_relval_actions_edit" href="/relvals/edit" title="Create new relval">New Relval</a>
    </div>
    <div id="id_footer_actions2" class="actions" style="display: flex; align-items: center;" hidden>
       <span id="selected_items_id">Selected items: </span>
       {#<a id="multiple_relval_actions_edit" onclick="create_new_relval()" href="javascript:void(0);" title="Edit selected relvals">Edit</a>#}
       <a id="multiple_relval_actions_delete" onclick="delete_selected_relvals()" href="javascript:void(0);" title="Delete selected relvals">Delete</a>
       <a id="multiple_relval_previous_status" onclick="prevStatus_selected_relvals()" href="javascript:void(0);" title="Move selected relvals to previous status">Previous</a>
       <a id="multiple_relval_next_status" onclick="nextStatus_selected_relvals()" href="javascript:void(0);" title="Move selected relvals to next status">Next</a>
    </div>    
  </footer>

  <script>
    (function(){
      {% if userinfo['role_index'] < 1 %}
        console.log({{ userinfo['role_index'] }});
        document.querySelectorAll('.cls_edit_relval').forEach(element => {element.remove();});
        document.querySelectorAll('.cls_clone_relval').forEach(element => {element.remove();});
        document.querySelectorAll('.cls_create_jira').forEach(element => {element.remove();});
        document.querySelectorAll('.cls_previous_status').forEach(element => {element.remove();});
        document.querySelectorAll('.cls_next_status').forEach(element => {element.remove();});
        document.querySelectorAll('.delete_relval').forEach(element => {element.remove();});
      {% endif %}
    })();
  </script>

  <script type="text/javascript">
    var datatable = $('#relvals_list').DataTable({
      "scrollX": true,
      "scrollY": true,
      "pageLength": 50,
      "stateSave": true,
      "stateSaveParams": function (settings, data) {
        // Reset sorting and search state after refresh
        data.order = [];
      },
      fixedHeader: {
        header: false,
        headerOffset: 57
      },
      language: {
        search: "_INPUT_",
        searchPlaceholder: "Search relvals from the following table...",
        "info": "Showing _START_ - _END_ of _TOTAL_",
        "lengthMenu":     "Page Size: _MENU_"  
      },
      order: [], // Remove any default sorting order
      "columnDefs": [ { orderable: false, targets: [0]}], // Do not sort checkbox column
      "sDom": '<"top"f>rt<"pagecounter dataTables_wrapper no-footer"ilp><"clear">',
      // Appending Search bar to the top and pagination info to the bottom
      initComplete: (settings, json)=>{
        $('.table_info').appendTo('footer');
        $('.pagecounter').appendTo('footer');
        $('.top').appendTo('.mysearchbar');
        $('select').removeClass('custom-select-sm');
      }
    });

    function create_new_relval(prepid) {
      var req = new XMLHttpRequest();
      const message = 'You can NOT modify the ticket once relvals are created. You need to create new ticket for further addition. Do you want to proceed?';
      activateConfirmModal('Create Relvals for <b>'+ prepid+'</b>?', message);
      $('#goahead_confirmationModal').on('click', function(){
        $('#confirmationModal').modal('toggle');
        $('body').addClass('loading');
        req.onreadystatechange = alertContents;
        req.open('POST', 'api/tickets/create_relvals');
        req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        req.send('prepid='+ prepid);
      });

      function alertContents() {
        if (req.readyState === XMLHttpRequest.DONE) {
          if (req.status === 200) {
            window.location.reload(false);
            window.onload = function() { $('body').removeClass('loading');}
          } else {
            $('body').removeClass('loading');
            const AlertIcon = '<i class="bi bi-exclamation-triangle" style="color:red"></i>';
            alertModal(AlertIcon +' There was a problem with the request', JSON.parse(req.responseText).message);
          }
        }
      }
    }

    function get_prepids_for_selected_checkboxes() {
      var selected = document.getElementsByName('table-checkbox');
      var prepids=[];
      selected.forEach(element =>{
        if (element.checked){
          var id = element.id;
          prepids.push(id.replace("id_", ""));
        }
      });
      return prepids
    }

    function delete_selected_relvals(){
      prepids = get_prepids_for_selected_checkboxes()
      delete_relval(prepids);
    }

    function delete_relval(prepids) {
      console.log(prepids);
      req = new XMLHttpRequest();
      var relvals_list = '';
      for (var i = 0; i < prepids.length; i++) {
        relvals_list += '<li>'+prepids[i]+'</li>';
      }
      activateConfirmModal('Deleting <b>'+ prepids.length +'</b> relvals', 'Are you sure you want to delete following relvals? <ul style="padding-top: 10px">'+relvals_list+'</ul>');
      $('#goahead_confirmationModal').on('click', function(){
        $('#confirmationModal').modal('toggle');
        $('body').addClass('loading');
        req.onreadystatechange = alertContents;
        req.open('DELETE', 'api/relvals/delete');
        req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        req.send(prepids.toString());
      });

      function alertContents() {
        if (req.readyState === XMLHttpRequest.DONE) {
          if (req.status === 200) {
            window.location.reload(true);
            window.onload = function() { $('body').removeClass('loading');}
          } else {
            $('body').removeClass('loading');
            const AlertIcon = '<i class="bi bi-exclamation-triangle" style="color:red"></i>';
            alertModal(AlertIcon +' There was a problem with the request', JSON.parse(req.responseText).message);
          }
        }
      }
    }

    function prevStatus_selected_relvals(){
      prepids = get_prepids_for_selected_checkboxes()
      prevStatus(prepids);
    }

    function prevStatus(prepids) {
      const options = {
        method: 'POST',
        body: JSON.stringify(prepids),
        headers: {'Content-Type': 'application/json'}
      }
      var relvals_list = '';
      for (var i = 0; i < prepids.length; i++) {
        relvals_list += '<li>'+prepids[i]+'</li>';
      }
      activateConfirmModal('Moving <b>'+ prepids.length +'</b> relvals previous status', '<ul style="padding-top: 10px">'+relvals_list+'</ul>'+ 'Any computing workflows submitted to the ReqMgr2 will be rejected. Do you want to proceed?');
      $('#goahead_confirmationModal').on('click', function(){
        $('#confirmationModal').modal('toggle');
        $('body').addClass('loading');
        fetch('api/relvals/previous_status', options).then(res => {
          if (res.status >= 200 && res.status <= 299) {
            return res.json();
          } else {
            throw Error(res.statusText);
          }
        }).then(data =>{
          window.location.reload(false)
          window.onload = function() { $('body').removeClass('loading');}
        }).catch(error => {
          $('body').removeClass('loading');
          const AlertIcon = '<i class="bi bi-exclamation-triangle" style="color:red"></i>';
          alertModal(AlertIcon +' There was a problem with the request', JSON.parse(error).message);
        })
      })
    }

    function nextStatus_selected_relvals(){
      prepids = get_prepids_for_selected_checkboxes()
      nextStatus(prepids);
    }

    function nextStatus(prepids) {
      req = new XMLHttpRequest();
      $('body').addClass('loading');
      req.onreadystatechange = alertContents;
      req.open('POST', 'api/relvals/next_status');
      req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
      req.send(prepids.toString());

      function alertContents() {
        if (req.readyState === XMLHttpRequest.DONE) {
          if (req.status === 200) {
            var resp = JSON.parse(req.responseText);
            window.location.reload(false)
            window.onload = function() { $('body').removeClass('loading');}
          } else {
            $('body').removeClass('loading');
            const AlertIcon = '<i class="bi bi-exclamation-triangle" style="color:red"></i>';
            alertModal(AlertIcon +' There was a problem with the request', JSON.parse(req.responseText).message);
          }
        }
      }
    }

    function monitor_checkbox_status(){
      var allboxes=document.getElementsByName('table-checkbox');  
      var allcheck=document.getElementById('select-all-id');
      var footer_action_ele1 = document.getElementById('id_footer_actions1');
      var footer_action_ele2 = document.getElementById('id_footer_actions2');
      allcheck.indeterminate = false;
      footer_action_ele1.hidden = false;
      footer_action_ele2.hidden = true;
      var sEle = false;
      var checkedCounter = 0;
      allboxes.forEach(box => {
        if (box.checked){
          sEle = true;
          checkedCounter += 1;
          allcheck.indeterminate = true;
        }
      });
      if (allcheck.checked){
        sEle = true;
        allcheck.indeterminate = true;
      }
      if (sEle){
        footer_action_ele1.hidden = true;
        footer_action_ele2.hidden = false;
      }
      if (checkedCounter === 0){
        allcheck.indeterminate = false;
        allcheck.checked = false;
      }
      if (checkedCounter === allboxes.length){
        allcheck.indeterminate = false;
        allcheck.checked = true;
      }
      if (checkedCounter > 0){document.getElementById('selected_items_id').innerHTML = "Selected "+checkedCounter+" items:";}
    }
    // Checking indeterminate state
    $('[name="table-checkbox"]').on('click', function(){
      monitor_checkbox_status();
    });
    $(document).ready(function(){
      monitor_checkbox_status();
    });

    function uncheck_all_checkboxes(){
      document.querySelectorAll('[type="checkbox"]').forEach(e => {e.indeterminate=false; e.checked = false; });
      document.querySelectorAll('#id_footer_actions1').forEach(e => {e.hidden = false});
      document.querySelectorAll('#id_footer_actions2').forEach(e => {e.hidden = true});
    }
    // De-select checkboxes when search is performed after checking the checkboxes
    $('[type="search"]').keyup(function () {
      console.log('searched')
      uncheck_all_checkboxes()
    });

     // Handle click on "Select all" control
    $('#select-all-id').on('click', function(){
      // Check/uncheck all checkboxes in the table
      var ele=document.getElementsByName('table-checkbox');  
      for(var i=0; i<ele.length; i++){  
        if(ele[i].type=='checkbox')  
          ele[i].checked=true;  
      }
      ele.forEach(element => {
        if(document.getElementById('select-all-id').checked)
          element.checked = true;
        else
          element.checked = false;
      });
      monitor_checkbox_status();
    });

    $('title').html('AlCaVal | RelVals')
  </script>
{% endblock %}
